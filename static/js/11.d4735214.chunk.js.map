{"version":3,"sources":["effects/handleImgError.effects.js","components/stickerCard/StickerCard.jsx","components/stickerCards/StickerCards.jsx","components/stickerShowCard/StickerShowCard.jsx","pages/stickers/Stickers.jsx"],"names":["handleImgError","e","target","onerror","src","StickerCard","image","type","selectedStickerInfo","className","onClick","onError","alt","StickerCards","title","stickerCards","isLoading","otherProps","map","sticker","key","id","single","StickerShowCard","toggleShowCard","selectedSticker","together","name","rel","href","description","price","link","connect","state","stickers","dispatch","fetchStickerStart","useState","isShowCard","setIsShowCard","setSelectedSticker","useEffect","onlyStickers","filter","emojis","themes"],"mappings":"4OAMeA,MANf,SAAwBC,GACjBA,EAAEC,OAAOC,UACZF,EAAEC,OAAOE,IAAI,+E,OCWFC,MARf,YAA0D,IAApCC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,oBACjC,OACE,yBAAKC,UAAS,wBAAmBF,GAAQG,QAASF,EAAqBG,QAASX,GAC9E,yBAAKI,IAAKE,EAAOM,IAAI,cAAcH,UAAU,mB,eCgBpCI,MAjBf,YAA6F,IAAtEC,EAAqE,EAArEA,MAAOC,EAA8D,EAA9DA,aAAcP,EAAgD,EAAhDA,oBAAqBQ,EAA2B,EAA3BA,UAAcC,EAAa,0EAC1F,OACE,6BACE,wBAAIR,UAAU,WAAWK,GACzB,yBAAKL,UAAU,mBAEXO,EACA,kBAAC,IAAD,MACAD,EAAaG,KAAI,SAACC,GAChB,OAAO,kBAAC,EAAD,eAAaC,IAAKD,EAAQE,GAAIf,MAAOa,EAAQb,MAAMgB,OAAQd,oBAAqB,kBAAMA,EAAoBW,KAAcF,U,OCgB5HM,MA3Bf,YAA+D,IAApCC,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,gBAEzC,OACE,yBAAKhB,UAAU,mBACb,yBAAKA,UAAU,aAAaC,QAASc,IACrC,yBAAKf,UAAU,aACb,yBAAKL,IAAKqB,EAAgBnB,MAAMoB,SAAUd,IAAI,mBAAmBH,UAAU,iBAAiBE,QAASX,KAEvG,yBAAKS,UAAU,cACb,yBAAKA,UAAU,YAAYC,QAASc,GAApC,QACA,wBAAIf,UAAU,qBACbgB,EAAgBE,MAEjB,wBAAIlB,UAAU,sBAAqB,uBAAGP,OAAO,SAAS0B,IAAI,sBAAsBC,KAAK,gDAAlD,WACnC,uBAAGpB,UAAU,2BACVgB,EAAgBK,aAEnB,0BAAMrB,UAAU,qBAAhB,MAAwCgB,EAAgBM,OACxD,uBAAGtB,UAAU,qBAAqBP,OAAO,SAAS0B,IAAI,sBAAsBC,KAAMJ,EAAgBO,MAAlG,kCCuDOC,uBAfS,SAACC,GACvB,MAAO,CACLC,SAAUD,EAAMf,QAAQgB,SACxBnB,UAAWkB,EAAMf,QAAQH,cAIF,SAACoB,GAC1B,MAAO,CACLC,kBAAmB,WACjBD,EAASC,mBAKAJ,EArEf,YAA+D,IAA3CE,EAA0C,EAA1CA,SAAUE,EAAgC,EAAhCA,kBAAmBrB,EAAa,EAAbA,UAAa,EACxBsB,oBAAS,GADe,mBACrDC,EADqD,KACzCC,EADyC,OAEdF,mBAAS,IAFK,mBAErDb,EAFqD,KAEpCgB,EAFoC,KAI5D,SAASjB,IACPgB,GAAeD,GAGjB,SAAS/B,EAAoBW,GAC3BsB,EAAmBtB,GACnBK,IAGFkB,qBAAU,WACRL,MACC,CAACA,IAGJ,IAAIM,EAAeR,EAASS,QAAO,SAACzB,GAAD,MAA8B,YAAjBA,EAAQZ,QACpDsC,EAASV,EAASS,QAAO,SAACzB,GAAD,MAA8B,UAAjBA,EAAQZ,QAC9CuC,EAASX,EAASS,QAAO,SAACzB,GAAD,MAA8B,UAAjBA,EAAQZ,QAGlD,OACE,yBAAKE,UAAU,gDACb,wBAAIA,UAAU,SAAd,4BACA,kBAAC,EAAD,CACEK,MAAM,eACNC,aAAc4B,EACdnC,oBAAqBA,EACrBQ,UAAWA,IAEb,kBAAC,EAAD,CACEF,MAAM,qBACNC,aAAc8B,EACdrC,oBAAqBA,EACrBQ,UAAWA,IAEb,kBAAC,EAAD,CACEF,MAAM,eACNC,aAAc+B,EACdtC,oBAAqBA,EACrBD,KAAK,QACLS,UAAWA,IAIXuB,EAAa,kBAAC,EAAD,CAAiBf,eAAgBA,EAAgBC,gBAAiBA,IAAsB","file":"static/js/11.d4735214.chunk.js","sourcesContent":["function handleImgError(e) {\n  if (!e.target.onerror) {\n    e.target.src=\"https://upload.wikimedia.org/wikipedia/commons/0/0a/No-image-available.png\"\n  }\n}\n\nexport default handleImgError","import React from 'react';\nimport handleImgError from '../../effects/handleImgError.effects'\n\nimport './stickerCard.style.scss'\n\nfunction StickerCard({image, type, selectedStickerInfo}) {\n  return (\n    <div className={`sticker__card ${type}`} onClick={selectedStickerInfo} onError={handleImgError} >\n      <img src={image} alt=\"Sticker Img\" className=\"sticker__img\" />\n    </div>\n  );\n}\n\nexport default StickerCard;","import React from 'react';\n\nimport StickerCard from '../../components/stickerCard/StickerCard'\nimport Spinner from '../spinner/spinner.component'\n\nimport './stickerCards.style.scss'\n\nfunction StickerCards({title, stickerCards, selectedStickerInfo, isLoading, ...otherProps}) {\n  return (\n    <div>\n      <h2 className=\"title-2\">{title}</h2>\n      <div className=\"stickers__cards\">\n        {\n          isLoading ? \n          <Spinner /> :\n          stickerCards.map((sticker) => {\n            return <StickerCard key={sticker.id} image={sticker.image.single} selectedStickerInfo={() => selectedStickerInfo(sticker)} {...otherProps} />\n          })\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default StickerCards;","import React from 'react';\nimport handleImgError from '../../effects/handleImgError.effects'\n\nimport './stickerShowCard.style.scss'\n\nfunction StickerShowCard({ toggleShowCard, selectedSticker }) {\n\n  return (\n    <div className=\"stickerShowCard\">\n      <div className=\"background\" onClick={toggleShowCard} />\n      <div className=\"left-side\">\n        <img src={selectedSticker.image.together} alt=\"All stickers img\" className=\"left-side__img\" onError={handleImgError} />\n      </div>\n      <div className=\"right-side\">\n        <div className=\"close-btn\" onClick={toggleShowCard}>&times;</div>\n        <h1 className=\"right-side__title\">\n        {selectedSticker.name}\n        </h1>\n        <h3 className=\"right-side__author\"><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://store.line.me/search/zh-Hant?q=HighQ\">High Q</a></h3>\n        <p className=\"right-side__description\">\n          {selectedSticker.description}\n        </p>\n        <span className=\"right-side__price\">NT${selectedSticker.price}</span>\n        <a className=\"right-side__button\" target=\"_blank\" rel=\"noopener noreferrer\" href={selectedSticker.link}>\n          前 往 購 買\n        </a>\n      </div>\n\n    </div>\n  );\n}\n\nexport default StickerShowCard;","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux'\nimport { fetchStickerStart } from '../../redux/sticker/sticker.action'\n\nimport StickerCards from '../../components/stickerCards/StickerCards'\nimport StickerShowCard from '../../components/stickerShowCard/StickerShowCard'\n\n\n\nfunction Stickers({ stickers, fetchStickerStart, isLoading }) {\n  const [isShowCard, setIsShowCard] = useState(false)\n  const [selectedSticker, setSelectedSticker] = useState('')\n\n  function toggleShowCard() {\n    setIsShowCard(!isShowCard)\n  }\n\n  function selectedStickerInfo(sticker) {\n    setSelectedSticker(sticker)\n    toggleShowCard()\n  }\n\n  useEffect(() => {\n    fetchStickerStart()\n  }, [fetchStickerStart])\n\n  \n  let onlyStickers = stickers.filter((sticker) => sticker.type === 'sticker') \n  let emojis = stickers.filter((sticker) => sticker.type === 'emoji') \n  let themes = stickers.filter((sticker) => sticker.type === 'theme') \n\n\n  return (\n    <div className=\"stickers pageContainer max-width-big-desktop\">\n      <h1 className=\"title\">貼圖介紹</h1>\n      <StickerCards  \n        title=\"貼圖\" \n        stickerCards={onlyStickers} \n        selectedStickerInfo={selectedStickerInfo}\n        isLoading={isLoading}\n      />\n      <StickerCards  \n        title=\"表情貼\" \n        stickerCards={emojis} \n        selectedStickerInfo={selectedStickerInfo}\n        isLoading={isLoading}\n      />\n      <StickerCards  \n        title=\"主題\" \n        stickerCards={themes} \n        selectedStickerInfo={selectedStickerInfo}\n        type=\"theme\"\n        isLoading={isLoading}\n      />\n\n      {\n        isShowCard ? <StickerShowCard toggleShowCard={toggleShowCard} selectedSticker={selectedSticker} /> : ''\n      }\n\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    stickers: state.sticker.stickers,\n    isLoading: state.sticker.isLoading\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchStickerStart: () => {\n      dispatch(fetchStickerStart())\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stickers);"],"sourceRoot":""}