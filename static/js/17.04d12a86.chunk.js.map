{"version":3,"sources":["components/formGroupInput/FormGroupInput.jsx","components/formSelectInput/FormSelectInput.jsx","components/adminMainAdd/AdminMainAdd.jsx","components/adminMainEdit/AdminMainEdit.jsx"],"names":["FormGroupInput","name","id","value","onChange","image","otherProps","className","htmlFor","FormSelectInput","children","required","disabled","AdminAdd","selectedPostCard","title","submitButton","edit","useState","media","date","photo","link","form","setForm","previewImage","setPreviewImage","dispatch","useDispatch","history","useHistory","handleChange","event","target","files","previewImageURL","window","URL","createObjectURL","reader","FileReader","onload","e","result","readAsDataURL","useEffect","onSubmit","preventDefault","saveWarning","then","isConfirmed","editPostCardStart","addPostCardStart","NoInput","type","accept","src","alt","AdminMainEdit","props","useParams","useSelector","state","postCard","selectedCard","getSinglePostCardStart"],"mappings":"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","file":"static/js/17.04d12a86.chunk.js","sourcesContent":["import React from 'react';\n\nfunction FormGroupInput({ name, id, value, onChange, image, ...otherProps }) {\n\n  return (\n    <div className=\"formGroupInput\">\n      <div className=\"form__group input\">\n        <label htmlFor={id} className=\"form__label\">{name}</label>\n        <input id={id} className={`form__input ${image ? 'form__input-image' : null} `} name={id} value={value || ''} onChange={onChange} {...otherProps} />\n      </div>\n    </div>\n  );\n}\n\nexport default FormGroupInput;","import React from 'react';\n\nfunction FormSelectInput({ name, id, value, children, ...otherProps }) {\n  return (\n    <div className=\"formSelectInput form__group input\">\n      <label htmlFor={id} className=\"form__label\">{name}</label>\n      <div className=\"select-wrapper\">\n        <select name={id} id={id} className=\"form__input\" value={value} required {...otherProps}>\n          <option value=\"default\" disabled >請選擇{name}</option>\n          {children}\n        </select>\n      </div>\n    </div>\n  );\n}\n\nexport default FormSelectInput;","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux'\nimport { addPostCardStart, editPostCardStart } from '../../redux/postCard/postCard.action'\nimport { useHistory } from 'react-router-dom'\n\nimport FormGroupInput from '../formGroupInput/FormGroupInput'\nimport FormSelectInput from '../formSelectInput/FormSelectInput'\nimport AdminCustomButton from '../adminCustomButton/AdminCustomButton'\n\nimport { NoInput, saveWarning } from '../../effects/sweetAlert2.effects'\n\n\nfunction AdminAdd({ selectedPostCard, title, submitButton, edit }) {\n  const [form, setForm] = useState({ media: 'default', date: '', photo: '', link: '' })\n  const [previewImage, setPreviewImage] = useState()\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  useEffect(() => {\n    if (selectedPostCard) {\n      setForm(selectedPostCard)\n    }\n  }, [selectedPostCard])\n\n  function handleSubmit(event) {\n    event.preventDefault()\n\n    if (!form.media) {\n      NoInput('來源')\n      return\n    } else if (!form.date) {\n      NoInput('日期')\n      return\n    }\n    else if (!form.photo) {\n      NoInput('照片')\n      return\n    }\n    else if (!form.link) {\n      NoInput('連結')\n      return\n    }\n\n    if (!edit) {\n      dispatch(addPostCardStart({ form, setForm }))\n    } else {\n      saveWarning().then((result) => {\n        if (result.isConfirmed) {\n          dispatch(editPostCardStart({ form, history }))\n        }\n      })\n    }\n  }\n\n  function handleChange(event) {\n    const { value, name, files } = event.target\n    if (files) {\n      let previewImageURL = window.URL.createObjectURL(files[0])\n      setPreviewImage(previewImageURL)\n      let image = files[0]\n      const reader = new FileReader()\n      reader.onload = (e) => {\n        setForm({ ...form, photo: e.target.result })\n      }\n      reader.readAsDataURL(image)\n    }\n    setForm({ ...form, [name]: value })\n  }\n\n  return (\n    <div className=\"adminAdd__page pageContainer max-width-big-desktop\">\n      <form className=\"adminAdd__form\" onSubmit={handleSubmit}>\n        <h1 className=\"adminAdd__title\">{title}</h1>\n        <FormSelectInput name=\"來源\" id=\"media\" value={form.media} onChange={handleChange} >\n          <option value=\"fb\">FB</option>\n          <option value=\"ig\">IG</option>\n        </FormSelectInput>\n        <FormGroupInput name=\"日期\" id=\"date\" value={form.date} type=\"date\" onChange={handleChange} />\n        <FormGroupInput name=\"貼文連結\" id=\"link\" value={form.link} onChange={handleChange} />\n        <div className=\"adminAdd__input-image\">\n          <FormGroupInput type=\"file\" accept=\"image/*\" name=\"圖片\" id=\"photo\" image onChange={handleChange} />\n          {\n            form.photo ?\n              <img\n                src={previewImage ? previewImage : form.photo}\n                className=\"adminAdd__preview-image\"\n                alt=\"preview\"\n              /> : null\n          }\n        </div>\n\n        <AdminCustomButton edit={submitButton} />\n\n      </form>\n    </div>\n  );\n}\n\nexport default AdminAdd;","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getSinglePostCardStart } from '../../redux/postCard/postCard.action'\n\nimport AdminAddPage from '../adminMainAdd/AdminMainAdd'\nimport Spinner from '../spinner/spinner.component'\n\nfunction AdminMainEdit(props) {\n\n  const { id } = useParams()\n  const dispatch = useDispatch()\n  const selectedPostCard = useSelector(state => state.postCard.selectedCard)\n\n  useEffect(() => {\n    dispatch(getSinglePostCardStart(id))\n  }, [id, dispatch])\n\n  return (\n    <div>\n      {\n        !selectedPostCard ?\n          <Spinner />\n          :\n          <AdminAddPage selectedPostCard={selectedPostCard} title=\"編輯貼文\" submitButton=\"儲存\" edit />\n      }\n    </div>\n  );\n}\n\nexport default AdminMainEdit;"],"sourceRoot":""}