{"version":3,"sources":["components/adminPageTitle/AdminPageTitle.jsx","components/adminTable/AdminTable.jsx","components/adminTableItem/AdminTableItem.jsx","components/stickerNav/StickerNav.jsx","pages/adminSticker/AdminSticker.jsx"],"names":["AdminPageTitle","title","addBottom","link","notShowAddButton","className","to","isAdminButton","AdminTable","children","tableTitles","map","tableTitle","index","key","AdminTableItem","td1","td2","td3","td4","isWishCard","id","page","dispatch","useDispatch","history","useHistory","data-title","src","alt","onClick","push","handleEditClick","deleteWarning","then","result","isConfirmed","deletePostCardStart","deleteHistoryStart","deleteCharacterStart","deleteStickerStart","deleteWishCardStart","handleDeleteClick","StickerNav","query","AdminSticker","props","search","useLocation","queryText","URLSearchParams","get","stickers","useSelector","state","sticker","isLoading","useState","type","name","price","image","single","together","description","selectStickers","setSelectStickers","useEffect","fetchStickerStart","otherTypeStickers","filter","onlyStickers"],"mappings":"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","file":"static/js/4.5d348d18.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { RiAddBoxLine } from 'react-icons/ri';\n\nimport CustomButton from '../custom-button/CustomButton.jsx'\n\nimport './adminPageTitle.style.scss'\n\nfunction AdminPageTitle({ title, addBottom, link, notShowAddButton }) {\n  return (\n    <div className=\"adminPageTitle admin-margin\">\n      <h1>{title}</h1>\n      {\n        notShowAddButton ?\n          ''\n          :\n          <Link to={link}>\n            <CustomButton isAdminButton>\n              <RiAddBoxLine />\n              {addBottom}\n            </CustomButton>\n          </Link>\n      }\n    </div>\n  );\n}\n\nexport default AdminPageTitle;","import React from 'react';\n\nimport './adminTable.style.scss'\n\nfunction AdminTable({ children, tableTitles }) {\n  return (\n    <div className=\"adminTable admin-margin\">\n      <table>\n        <thead>\n          <tr>\n            {\n              tableTitles.map((tableTitle, index) => {\n                return <th key={index}>{tableTitle}</th>\n              })\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {children}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default AdminTable;","import React from 'react';\nimport { useDispatch } from 'react-redux'\nimport { deletePostCardStart } from '../../redux/postCard/postCard.action'\nimport { deleteHistoryStart } from '../../redux/history/history.action'\nimport { deleteCharacterStart } from '../../redux/character/character.action'\nimport { deleteStickerStart } from '../../redux/sticker/sticker.action'\nimport { deleteWishCardStart } from '../../redux/wishCard/wishCard.action'\nimport { useHistory } from 'react-router-dom'\n\nimport CustomButton from '../custom-button/CustomButton'\nimport { MdEdit, MdDelete } from 'react-icons/md'\n\nimport { deleteWarning } from '../../effects/sweetAlert2.effects'\n\nimport './adminTableItem.style.scss'\n\nfunction AdminTableItem({ tableTitles, td1, td2, td3, td4, isWishCard, id, page }) {\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  function handleDeleteClick(id) {\n    deleteWarning().then((result) => {\n      if (result.isConfirmed) {\n        switch (page) {\n          case \"main\":\n            return dispatch(deletePostCardStart(id))\n          case \"history\":\n            return dispatch(deleteHistoryStart(id))\n          case \"character\":\n            return dispatch(deleteCharacterStart(id))\n          case \"sticker\":\n            return dispatch(deleteStickerStart(id))\n          case \"wishCard\":\n            return dispatch(deleteWishCardStart(id))\n\n          default:\n            return\n        }\n      }\n    })\n  }\n\n  function handleEditClick(id) {\n    history.push(`/admin/${page}/edit/${id}`)\n  }\n\n  return (\n    <tr>\n      <td data-title={tableTitles[0]}>{td1}</td>\n      <td data-title={tableTitles[1]}>{td2}</td>\n      <td data-title={tableTitles[2]}>{td3}</td>\n      <td data-title={tableTitles[3]}>\n        {\n          isWishCard ?\n            td4\n            :\n            <div className=\"table__img\">\n              <img src={td4} alt=\"\" className=\"table__img\" />\n            </div>\n        }\n\n      </td>\n\n      <td data-title={tableTitles[4]}>\n        <div className=\"table__icon\">\n          <CustomButton isAdminButton onClick={() => handleEditClick(id)}><MdEdit /></CustomButton>\n          <CustomButton isAdminButton onClick={() => handleDeleteClick(id)}><MdDelete /></CustomButton>\n        </div>\n      </td>\n    </tr>\n  );\n}\n\nexport default AdminTableItem;","import React from 'react';\nimport { Link } from 'react-router-dom'\n\nimport './stickerNav.style.scss'\n\nfunction StickerNav({ query }) {\n\n  return (\n    <nav className=\"stickerNav admin-margin\">\n      <ul className=\"stickerNav__list\">\n        <li className=\"stickerNav__item\">\n          <Link\n            to=\"/admin/sticker\"\n            className={`${!query ? 'active' : ''} stickerNav__link`}\n          >\n            貼圖\n          </Link>\n        </li>\n        <li className=\"stickerNav__item\">\n          <Link\n            to=\"/admin/sticker?sticker=emoji\"\n            className={`${query === 'emoji' ? 'active' : ''} stickerNav__link`}\n          >\n            表情貼\n          </Link>\n        </li>\n        <li className=\"stickerNav__item\">\n          <Link\n            to=\"/admin/sticker?sticker=theme\"\n            className={`${query === 'theme' ? 'active' : ''} stickerNav__link`}\n          >\n            主題\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default StickerNav;","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { fetchStickerStart } from '../../redux/sticker/sticker.action'\nimport { useLocation } from 'react-router-dom'\n\nimport AdminPageTitle from '../../components/adminPageTitle/AdminPageTitle'\nimport AdminTable from '../../components/adminTable/AdminTable'\nimport AdminTableItem from '../../components/adminTableItem/AdminTableItem'\nimport StickerNav from '../../components/stickerNav/StickerNav'\nimport Spinner from '../../components/spinner/spinner.component'\n\nfunction AdminSticker(props) {\n\n  const { search } = useLocation()\n  const query = new URLSearchParams(search)\n  const queryText = query.get('sticker')\n\n  const stickers = useSelector((state) => state.sticker.stickers)\n  const isLoading = useSelector((state) => state.sticker.isLoading)\n  const [selectStickers, setSelectStickers] = useState([{\n    id: '',\n    type: 'default',\n    name: '',\n    price: '',\n    image: { single: '', together: '' },\n    link: '',\n    description: ''\n  }])\n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(fetchStickerStart('admin'))\n  }, [dispatch])\n\n  useEffect(() => {\n    if (queryText && !isLoading) {\n      let otherTypeStickers = stickers.filter((sticker) => sticker.type === queryText)\n      // let otherTypeStickers = stickers[queryText]\n      setSelectStickers(otherTypeStickers)\n    } else if (!isLoading) {\n      let onlyStickers = stickers.filter((sticker) => sticker.type === 'sticker')\n      // let onlyStickers = stickers['sticker']\n      setSelectStickers(onlyStickers)\n    }\n  }, [stickers, queryText, isLoading])\n\n  const tableTitles = [\n    '序列',\n    '貼圖名稱',\n    '價格',\n    '縮圖',\n    '管理'\n  ]\n\n  return (\n    <div className=\"pageContainer max-width-big-desktop\">\n      <AdminPageTitle title=\"管理貼圖\" addBottom=\"新增貼圖\" link=\"/admin/sticker/add\" />\n      <StickerNav query={queryText} />\n      {\n        isLoading ?\n          <Spinner /> :\n          <AdminTable tableTitles={tableTitles}>\n            {\n              selectStickers.map((sticker, index) => {\n                return <AdminTableItem key={sticker.id} tableTitles={tableTitles} td1={index + 1} td2={sticker.name} td3={sticker.price} td4={sticker.image.single} id={sticker.id} page=\"sticker\" />\n              })\n            }\n          </AdminTable>\n      }\n    </div>\n  );\n}\n\nexport default AdminSticker;"],"sourceRoot":""}